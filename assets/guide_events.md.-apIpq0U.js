import{_ as i,c as t,a0 as r,o}from"./chunks/framework.DApwE8x4.js";const u=JSON.parse('{"title":"Callback Events","description":"","frontmatter":{},"headers":[],"relativePath":"guide/events.md","filePath":"en/guide/events.md","lastUpdated":1728578347000}'),n={name:"guide/events.md"};function l(a,e,d,s,c,g){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="callback-events" tabindex="-1">Callback Events <a class="header-anchor" href="#callback-events" aria-label="Permalink to &quot;Callback Events&quot;">​</a></h1><h2 id="update-render-range" tabindex="-1"><code>UPDATE_RENDER_RANGE</code> <a class="header-anchor" href="#update-render-range" aria-label="Permalink to &quot;`UPDATE_RENDER_RANGE`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(begin: number, end: number) =&gt; void</code></li><li><strong>Description</strong>: Triggered when the render range is updated.</li><li><strong>Parameters</strong>: <ul><li><code>begin</code>: The starting index of the render range.</li><li><code>end</code>: The ending index of the render range.</li></ul></li></ul><h2 id="update-virtual-size" tabindex="-1"><code>UPDATE_VIRTUAL_SIZE</code> <a class="header-anchor" href="#update-virtual-size" aria-label="Permalink to &quot;`UPDATE_VIRTUAL_SIZE`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(virtualSize: number) =&gt; void</code></li><li><strong>Description</strong>: Triggered when the virtual list size is updated.</li><li><strong>Parameters</strong>: <ul><li><code>virtualSize</code>: The new size of the virtual list.</li></ul></li></ul><h2 id="update-view-range" tabindex="-1"><code>UPDATE_VIEW_RANGE</code> <a class="header-anchor" href="#update-view-range" aria-label="Permalink to &quot;`UPDATE_VIEW_RANGE`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(begin: number, end: number) =&gt; void</code></li><li><strong>Description</strong>: Triggered when the view range is updated.</li><li><strong>Parameters</strong>: <ul><li><code>begin</code>: The starting index of the view range.</li><li><code>end</code>: The ending index of the view range.</li></ul></li></ul><h2 id="update-item-size" tabindex="-1"><code>UPDATE_ITEM_SIZE</code> <a class="header-anchor" href="#update-item-size" aria-label="Permalink to &quot;`UPDATE_ITEM_SIZE`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(id: string, size: number) =&gt; void</code></li><li><strong>Description</strong>: Triggered when an item&#39;s size is updated.</li><li><strong>Parameters</strong>: <ul><li><code>id</code>: The unique identifier of the item.</li><li><code>size</code>: The new size of the item.</li></ul></li></ul><h2 id="update-transform-distance" tabindex="-1"><code>UPDATE_TRANSFORM_DISTANCE</code> <a class="header-anchor" href="#update-transform-distance" aria-label="Permalink to &quot;`UPDATE_TRANSFORM_DISTANCE`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(distance: number) =&gt; void</code></li><li><strong>Description</strong>: Triggered when the transform distance is updated.</li><li><strong>Parameters</strong>: <ul><li><code>distance</code>: The new transform distance.</li></ul></li></ul><h2 id="scroll" tabindex="-1"><code>SCROLL</code> <a class="header-anchor" href="#scroll" aria-label="Permalink to &quot;`SCROLL`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(offset: number) =&gt; void</code></li><li><strong>Description</strong>: Triggered when a scroll event occurs.</li><li><strong>Parameters</strong>: <ul><li><code>offset</code>: The scroll offset.</li></ul></li></ul><h2 id="scroll-to-top" tabindex="-1"><code>SCROLL_TO_TOP</code> <a class="header-anchor" href="#scroll-to-top" aria-label="Permalink to &quot;`SCROLL_TO_TOP`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(firstItem: T) =&gt; void</code></li><li><strong>Description</strong>: Triggered when scrolling to the top.</li><li><strong>Parameters</strong>: <ul><li><code>firstItem</code>: The first item in the list.</li></ul></li></ul><h2 id="scroll-to-bottom" tabindex="-1"><code>SCROLL_TO_BOTTOM</code> <a class="header-anchor" href="#scroll-to-bottom" aria-label="Permalink to &quot;`SCROLL_TO_BOTTOM`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(lastItem: T) =&gt; void</code></li><li><strong>Description</strong>: Triggered when scrolling to the bottom.</li><li><strong>Parameters</strong>: <ul><li><code>lastItem</code>: The last item in the list.</li></ul></li></ul><h2 id="render-list-change" tabindex="-1"><code>RENDER_LIST_CHANGE</code> <a class="header-anchor" href="#render-list-change" aria-label="Permalink to &quot;`RENDER_LIST_CHANGE`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(renderRange: { renderBegin: number; renderEnd: number }, renderList: T[], clientEl: HTMLElement | Element) =&gt; void</code></li><li><strong>Description</strong>: Triggered when the render list changes.</li><li><strong>Parameters</strong>: <ul><li><code>renderRange</code>: An object containing the render begin and end indices.</li><li><code>renderList</code>: The list of currently rendered items.</li><li><code>clientEl</code>: The client element.</li></ul></li></ul><h2 id="size-change" tabindex="-1"><code>SIZE_CHANGE</code> <a class="header-anchor" href="#size-change" aria-label="Permalink to &quot;`SIZE_CHANGE`&quot;">​</a></h2><ul><li><strong>Type</strong>: <code>(sizes: IVirtualListChildrenSize) =&gt; void</code></li><li><strong>Description</strong>: Triggered when the size of list children changes.</li><li><strong>Parameters</strong>: <ul><li><code>sizes</code>: An object containing size information of the children.</li></ul></li></ul>',21)]))}const T=i(n,[["render",l]]);export{u as __pageData,T as default};
