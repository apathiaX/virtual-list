import{_ as s,c as e,a0 as a,o as t}from"./chunks/framework.DApwE8x4.js";const g=JSON.parse('{"title":"Options","description":"","frontmatter":{},"headers":[],"relativePath":"guide/options.md","filePath":"en/guide/options.md","lastUpdated":1728578347000}'),n={name:"guide/options.md"};function l(h,i,r,k,d,p){return t(),e("div",null,i[0]||(i[0]=[a('<h1 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><details class="details custom-block"><summary>IVirtualListOptions</summary><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IVirtualListOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  clientEl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  bodyEl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  itemKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  horizontal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  minSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  fixed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  buffer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  bufferTop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  bufferBottom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  renderControl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    begin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">begin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details><h3 id="clientel-htmlelement" tabindex="-1"><code>clientEl?: HTMLElement</code> <a class="header-anchor" href="#clientel-htmlelement" aria-label="Permalink to &quot;`clientEl?: HTMLElement`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>HTMLElement | undefined</code></li><li><strong>Description:</strong><br><em>(Optional)</em> The HTML element that acts as the viewport or container for the virtual list. This is the visible area through which the user interacts with the list items. If not specified, the default element might be the parent of the list.</li></ul><h3 id="bodyel-htmlelement" tabindex="-1"><code>bodyEl?: HTMLElement</code> <a class="header-anchor" href="#bodyel-htmlelement" aria-label="Permalink to &quot;`bodyEl?: HTMLElement`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>HTMLElement | undefined</code></li><li><strong>Description:</strong><br><em>(Optional)</em> The HTML element that contains the actual list of items. This element holds the rendered content, while <code>clientEl</code> defines the visible area of the list.</li></ul><h3 id="list-t" tabindex="-1"><code>list: T[]</code> <a class="header-anchor" href="#list-t" aria-label="Permalink to &quot;`list: T[]`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>T[]</code></li><li><strong>Description:</strong><br> The array of data entries of type <code>T</code> that will be rendered in the virtual list. This is the main dataset, where each entry corresponds to a list item.</li></ul><h3 id="itemkey-string" tabindex="-1"><code>itemKey: string</code> <a class="header-anchor" href="#itemkey-string" aria-label="Permalink to &quot;`itemKey: string`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> A string key that uniquely identifies each item in the <code>list</code>. This is useful for tracking items efficiently and preventing unnecessary re-rendering, especially when the list is updated or filtered.</li></ul><h3 id="horizontal-boolean" tabindex="-1"><code>horizontal?: boolean</code> <a class="header-anchor" href="#horizontal-boolean" aria-label="Permalink to &quot;`horizontal?: boolean`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>boolean | undefined</code></li><li><strong>Description:</strong><br><em>(Optional)</em> A boolean flag that determines whether the list scrolls horizontally (<code>true</code>) or vertically (<code>false</code>, default). Use this if you need horizontal scrolling behavior in your component.</li></ul><h3 id="minsize-number" tabindex="-1"><code>minSize?: number</code> <a class="header-anchor" href="#minsize-number" aria-label="Permalink to &quot;`minSize?: number`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number | undefined</code></li><li><strong>Description:</strong><br><em>(Optional)</em> The minimum size (in pixels) of each list item. This value helps the virtual scroller compute how many items can fit within the visible viewport, optimizing the rendering process.</li></ul><h3 id="fixed-boolean" tabindex="-1"><code>fixed?: boolean</code> <a class="header-anchor" href="#fixed-boolean" aria-label="Permalink to &quot;`fixed?: boolean`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>boolean | undefined</code></li><li><strong>Description:</strong><br><em>(Optional)</em> If <code>true</code>, this indicates that each item in the list has a fixed size. Fixed-size items allow the virtual scroller to make precise calculations and potentially improve performance by avoiding recalculations on each render.</li></ul><h3 id="buffer-number" tabindex="-1"><code>buffer?: number</code> <a class="header-anchor" href="#buffer-number" aria-label="Permalink to &quot;`buffer?: number`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number | undefined</code></li><li><strong>Description:</strong><br><em>(Optional)</em> The number of extra items to render outside the visible viewport to improve the smoothness of the scrolling experience. A higher buffer helps avoid white spaces during fast scrolling.</li></ul><h3 id="buffertop-number" tabindex="-1"><code>bufferTop?: number</code> <a class="header-anchor" href="#buffertop-number" aria-label="Permalink to &quot;`bufferTop?: number`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number | undefined</code></li><li><strong>Description:</strong><br><em>(Optional)</em> Specifies how many extra items should be rendered above the visible area to prevent any flickering or white space during upward scrolling.</li></ul><h3 id="bufferbottom-number" tabindex="-1"><code>bufferBottom?: number</code> <a class="header-anchor" href="#bufferbottom-number" aria-label="Permalink to &quot;`bufferBottom?: number`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number | undefined</code></li><li><strong>Description:</strong><br><em>(Optional)</em> Specifies how many extra items should be rendered below the visible area to ensure that fast scrolling doesn&#39;t result in a blank screen as items load.</li></ul><h3 id="rendercontrol-begin-number-end-number-begin-number-end-number" tabindex="-1"><code>renderControl?: (begin: number, end: number) =&gt; { begin: number; end: number }</code> <a class="header-anchor" href="#rendercontrol-begin-number-end-number-begin-number-end-number" aria-label="Permalink to &quot;`renderControl?: (begin: number, end: number) =&gt; { begin: number; end: number }`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>function | undefined</code></li><li><strong>Description:</strong><br><em>(Optional)</em> A function that takes the indices of the first (<code>begin</code>) and last (<code>end</code>) visible items and returns an adjusted range of indices to control the rendering behavior. This is useful if you want custom logic for determining which items should be rendered at any given time.</li></ul><h2 id="event" tabindex="-1">Event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;Event&quot;">​</a></h2><details class="details custom-block"><summary>VirtualListEvent</summary><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VirtualListEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  UPDATE_RENDER_RANGE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;updateRenderRange&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  UPDATE_VIRTUAL_SIZE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;updateVirtualSize&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  UPDATE_VIEW_RANGE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;updateViewRange&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  UPDATE_ITEM_SIZE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;updateItemSize&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  UPDATE_TRANSFORM_DISTANCE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;updateTransformDistance&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  SCROLL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;scroll&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  SCROLL_TO_TOP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;scrollToTop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  SCROLL_TO_BOTTOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;scrollToBottom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  RENDER_LIST_CHANGE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;renderListChange&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  SIZE_CHANGE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;sizeChange&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details><h3 id="update-render-range" tabindex="-1"><code>UPDATE_RENDER_RANGE</code> <a class="header-anchor" href="#update-render-range" aria-label="Permalink to &quot;`UPDATE_RENDER_RANGE`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the visible render range is updated, providing the new start and end indices.</li></ul><h3 id="update-virtual-size" tabindex="-1"><code>UPDATE_VIRTUAL_SIZE</code> <a class="header-anchor" href="#update-virtual-size" aria-label="Permalink to &quot;`UPDATE_VIRTUAL_SIZE`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the total size of the virtual list is updated, providing the updated virtual list size.</li></ul><h3 id="update-view-range" tabindex="-1"><code>UPDATE_VIEW_RANGE</code> <a class="header-anchor" href="#update-view-range" aria-label="Permalink to &quot;`UPDATE_VIEW_RANGE`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the view range is updated, providing the new start and end indices.</li></ul><h3 id="update-item-size" tabindex="-1"><code>UPDATE_ITEM_SIZE</code> <a class="header-anchor" href="#update-item-size" aria-label="Permalink to &quot;`UPDATE_ITEM_SIZE`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the size of an individual item changes, providing the item&#39;s <code>id</code> and new size.</li></ul><h3 id="update-transform-distance" tabindex="-1"><code>UPDATE_TRANSFORM_DISTANCE</code> <a class="header-anchor" href="#update-transform-distance" aria-label="Permalink to &quot;`UPDATE_TRANSFORM_DISTANCE`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the transform offset is updated, providing the new offset distance.</li></ul><h3 id="scroll" tabindex="-1"><code>SCROLL</code> <a class="header-anchor" href="#scroll" aria-label="Permalink to &quot;`SCROLL`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the list is scrolled, providing the current scroll offset.</li></ul><h3 id="scroll-to-top" tabindex="-1"><code>SCROLL_TO_TOP</code> <a class="header-anchor" href="#scroll-to-top" aria-label="Permalink to &quot;`SCROLL_TO_TOP`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the list scrolls to the top, providing the first visible item.</li></ul><h3 id="scroll-to-bottom" tabindex="-1"><code>SCROLL_TO_BOTTOM</code> <a class="header-anchor" href="#scroll-to-bottom" aria-label="Permalink to &quot;`SCROLL_TO_BOTTOM`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the list scrolls to the bottom, providing the last visible item.</li></ul><h3 id="render-list-change" tabindex="-1"><code>RENDER_LIST_CHANGE</code> <a class="header-anchor" href="#render-list-change" aria-label="Permalink to &quot;`RENDER_LIST_CHANGE`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the render list changes, providing the render range, rendered items, and the list container element.</li></ul><h3 id="size-change" tabindex="-1"><code>SIZE_CHANGE</code> <a class="header-anchor" href="#size-change" aria-label="Permalink to &quot;`SIZE_CHANGE`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Description:</strong><br> Triggered when the size of the virtual list items changes, providing the updated item sizes.</li></ul><h2 id="callback" tabindex="-1">CallBack <a class="header-anchor" href="#callback" aria-label="Permalink to &quot;CallBack&quot;">​</a></h2><details class="details custom-block"><summary>Details</summary><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IVirtualListCallBack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UPDATE_RENDER_RANGE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">begin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UPDATE_VIRTUAL_SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">virtualSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UPDATE_VIEW_RANGE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">begin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UPDATE_ITEM_SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UPDATE_TRANSFORM_DISTANCE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">distance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SCROLL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">offset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SCROLL_TO_TOP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">firstItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SCROLL_TO_BOTTOM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">lastItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RENDER_LIST_CHANGE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    renderRange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">renderBegin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">renderEnd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    renderList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[],</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    clientEl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [VirtualListEvent.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SIZE_CHANGE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sizes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IVirtualListChildrenSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details><h3 id="virtuallistevent-update-render-range-begin-number-end-number-void" tabindex="-1"><code>[VirtualListEvent.UPDATE_RENDER_RANGE]?: (begin: number, end: number) =&gt; void</code> <a class="header-anchor" href="#virtuallistevent-update-render-range-begin-number-end-number-void" aria-label="Permalink to &quot;`[VirtualListEvent.UPDATE_RENDER_RANGE]?: (begin: number, end: number) =&gt; void`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(begin: number, end: number) =&gt; void | undefined</code></li><li><strong>Description:</strong><br> Triggered when the render range is updated, providing the new start and end indices.</li></ul><h3 id="virtuallistevent-update-virtual-size-virtualsize-number-void" tabindex="-1"><code>[VirtualListEvent.UPDATE_VIRTUAL_SIZE]?: (virtualSize: number) =&gt; void</code> <a class="header-anchor" href="#virtuallistevent-update-virtual-size-virtualsize-number-void" aria-label="Permalink to &quot;`[VirtualListEvent.UPDATE_VIRTUAL_SIZE]?: (virtualSize: number) =&gt; void`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(virtualSize: number) =&gt; void | undefined</code></li><li><strong>Description:</strong><br> Triggered when the total size of the virtual list is updated, providing the updated virtual list size.</li></ul><h3 id="virtuallistevent-update-view-range-begin-number-end-number-void" tabindex="-1"><code>[VirtualListEvent.UPDATE_VIEW_RANGE]?: (begin: number, end: number) =&gt; void</code> <a class="header-anchor" href="#virtuallistevent-update-view-range-begin-number-end-number-void" aria-label="Permalink to &quot;`[VirtualListEvent.UPDATE_VIEW_RANGE]?: (begin: number, end: number) =&gt; void`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(begin: number, end: number) =&gt; void | undefined</code></li><li><strong>Description:</strong><br> Triggered when the view range is updated, providing the new start and end indices.</li></ul><h3 id="virtuallistevent-update-item-size-id-string-size-number-void" tabindex="-1"><code>[VirtualListEvent.UPDATE_ITEM_SIZE]?: (id: string, size: number) =&gt; void</code> <a class="header-anchor" href="#virtuallistevent-update-item-size-id-string-size-number-void" aria-label="Permalink to &quot;`[VirtualListEvent.UPDATE_ITEM_SIZE]?: (id: string, size: number) =&gt; void`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(id: string, size: number) =&gt; void | undefined</code></li><li><strong>Description:</strong><br> Triggered when the size of an individual item changes, providing the item&#39;s <code>id</code> and new size.</li></ul><h3 id="virtuallistevent-update-transform-distance-distance-number-void" tabindex="-1"><code>[VirtualListEvent.UPDATE_TRANSFORM_DISTANCE]?: (distance: number) =&gt; void</code> <a class="header-anchor" href="#virtuallistevent-update-transform-distance-distance-number-void" aria-label="Permalink to &quot;`[VirtualListEvent.UPDATE_TRANSFORM_DISTANCE]?: (distance: number) =&gt; void`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(distance: number) =&gt; void | undefined</code></li><li><strong>Description:</strong><br> Triggered when the transform offset is updated, providing the new offset distance.</li></ul><h3 id="virtuallistevent-scroll-offset-number-void" tabindex="-1"><code>[VirtualListEvent.SCROLL]?: (offset: number) =&gt; void</code> <a class="header-anchor" href="#virtuallistevent-scroll-offset-number-void" aria-label="Permalink to &quot;`[VirtualListEvent.SCROLL]?: (offset: number) =&gt; void`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(offset: number) =&gt; void | undefined</code></li><li><strong>Description:</strong><br> Triggered when the list is scrolled, providing the current scroll offset.</li></ul><h3 id="virtuallistevent-scroll-to-top-firstitem-t-void" tabindex="-1"><code>[VirtualListEvent.SCROLL_TO_TOP]?: (firstItem: T) =&gt; void</code> <a class="header-anchor" href="#virtuallistevent-scroll-to-top-firstitem-t-void" aria-label="Permalink to &quot;`[VirtualListEvent.SCROLL_TO_TOP]?: (firstItem: T) =&gt; void`&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(firstItem: T) =&gt; void | undefined</code></li><li><strong>Description:</strong><br> Triggered when the list scrolls to the</li></ul>',63)]))}const E=s(n,[["render",l]]);export{g as __pageData,E as default};
